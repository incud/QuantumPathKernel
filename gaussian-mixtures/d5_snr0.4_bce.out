Welcome
29/03/2022 18:13:19 - Experiment D=5, snr=0.4, N=16, loss=bce, MAX_LAYERS=20, MAX_EPOCHS=1000

29/03/2022 18:13:19 - Creating QNN (1 layers)
29/03/2022 18:13:20 - Start training
....................
29/03/2022 18:18:04 - Start NTK PK calculation
29/03/2022 18:19:45 - End QNN

29/03/2022 18:19:45 - Creating QNN (2 layers)
29/03/2022 18:19:45 - Start training
....................
29/03/2022 18:25:21 - Start NTK PK calculation
29/03/2022 18:27:50 - End QNN

29/03/2022 18:27:50 - Creating QNN (3 layers)
29/03/2022 18:27:50 - Start training
....................
29/03/2022 18:35:20 - Start NTK PK calculation
29/03/2022 18:39:55 - End QNN

29/03/2022 18:39:55 - Creating QNN (4 layers)
29/03/2022 18:39:55 - Start training
....................
29/03/2022 18:49:12 - Start NTK PK calculation
29/03/2022 18:54:23 - End QNN

29/03/2022 18:54:23 - Creating QNN (5 layers)
29/03/2022 18:54:23 - Start training
....................
29/03/2022 19:05:32 - Start NTK PK calculation
29/03/2022 19:28:52 - End QNN

29/03/2022 19:28:52 - Creating QNN (6 layers)
29/03/2022 19:28:52 - Start training
....................
29/03/2022 19:41:28 - Start NTK PK calculation
29/03/2022 20:02:05 - End QNN

29/03/2022 20:02:05 - Creating QNN (7 layers)
29/03/2022 20:02:05 - Start training
....................2022-03-29 20:52:30.507181: E external/org_tensorflow/tensorflow/compiler/xla/pjrt/pjrt_stream_executor_client.cc:2140] Execution of replica 0 failed: INTERNAL: Failed to load in-memory CUBIN: CUDA_ERROR_OUT_OF_MEMORY: out of memory

29/03/2022 20:16:34 - Start NTK PK calculation
29/03/2022 20:52:21 - End QNN

29/03/2022 20:52:21 - Creating QNN (8 layers)
29/03/2022 20:52:21 - Start training
Traceback (most recent call last):
  File "/data/mgrossi/QuantumPathKernel/gaussian-mixtures/gaussian-mixture-jax.py", line 552, in <module>
    main()
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/click/core.py", line 1128, in __call__
    return self.main(*args, **kwargs)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/click/core.py", line 1053, in main
    rv = self.invoke(ctx)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/click/core.py", line 1659, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/click/core.py", line 1395, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/click/core.py", line 754, in invoke
    return __callback(*args, **kwargs)
  File "/data/mgrossi/QuantumPathKernel/gaussian-mixtures/gaussian-mixture-jax.py", line 474, in experiment
    run_qnns(d, snr, n, loss, MAX_LAYERS=layers, MAX_EPOCHS=epochs)
  File "/data/mgrossi/QuantumPathKernel/gaussian-mixtures/gaussian-mixture-jax.py", line 173, in run_qnns
    specs, df, ntk_grams, ntk_gram_indexes, pk_gram = run_qnn(X, Y, loss, layers=layers, epochs=MAX_EPOCHS)
  File "/data/mgrossi/QuantumPathKernel/gaussian-mixtures/gaussian-mixture-jax.py", line 157, in run_qnn
    specs, df = train_qnn(X, Y, qnn, loss, n_params=2*layers, epochs=epochs)
  File "/data/mgrossi/QuantumPathKernel/gaussian-mixtures/gaussian-mixture-jax.py", line 108, in train_qnn
    cost, grad_circuit = jax.value_and_grad(lambda w: calculate_cost(X, Y, qnn, w))(params)
  File "/data/mgrossi/QuantumPathKernel/gaussian-mixtures/gaussian-mixture-jax.py", line 108, in <lambda>
    cost, grad_circuit = jax.value_and_grad(lambda w: calculate_cost(X, Y, qnn, w))(params)
  File "/data/mgrossi/QuantumPathKernel/gaussian-mixtures/gaussian-mixture-jax.py", line 85, in calculate_bce_cost
    yp = (qnn(x, params) + 1)/2 + epsilon  # 1 label -> 1; - label -> 0
jax._src.source_info_util.JaxStackTraceBeforeTransformation: RuntimeError: INTERNAL: Failed to load in-memory CUBIN: CUDA_ERROR_OUT_OF_MEMORY: out of memory

The preceding stack trace is the source of the JAX operation that, once transformed by JAX, triggered the following exception.

--------------------

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/data/mgrossi/QuantumPathKernel/gaussian-mixtures/gaussian-mixture-jax.py", line 552, in <module>
    main()
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/click/core.py", line 1128, in __call__
    return self.main(*args, **kwargs)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/click/core.py", line 1053, in main
    rv = self.invoke(ctx)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/click/core.py", line 1659, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/click/core.py", line 1395, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/click/core.py", line 754, in invoke
    return __callback(*args, **kwargs)
  File "/data/mgrossi/QuantumPathKernel/gaussian-mixtures/gaussian-mixture-jax.py", line 474, in experiment
    run_qnns(d, snr, n, loss, MAX_LAYERS=layers, MAX_EPOCHS=epochs)
  File "/data/mgrossi/QuantumPathKernel/gaussian-mixtures/gaussian-mixture-jax.py", line 173, in run_qnns
    specs, df, ntk_grams, ntk_gram_indexes, pk_gram = run_qnn(X, Y, loss, layers=layers, epochs=MAX_EPOCHS)
  File "/data/mgrossi/QuantumPathKernel/gaussian-mixtures/gaussian-mixture-jax.py", line 157, in run_qnn
    specs, df = train_qnn(X, Y, qnn, loss, n_params=2*layers, epochs=epochs)
  File "/data/mgrossi/QuantumPathKernel/gaussian-mixtures/gaussian-mixture-jax.py", line 108, in train_qnn
    cost, grad_circuit = jax.value_and_grad(lambda w: calculate_cost(X, Y, qnn, w))(params)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/jax/_src/traceback_util.py", line 162, in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/jax/_src/api.py", line 958, in value_and_grad_f
    g = vjp_py(lax_internal._one(ans))
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/jax/_src/tree_util.py", line 279, in __call__
    return self.fun(*args, **kw)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/jax/_src/api.py", line 2315, in _vjp_pullback_wrapper
    ans = fun(*args)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/jax/_src/tree_util.py", line 279, in __call__
    return self.fun(*args, **kw)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/jax/interpreters/ad.py", line 126, in unbound_vjp
    arg_cts = backward_pass(jaxpr, reduce_axes, True, consts, dummy_args, cts)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/jax/interpreters/ad.py", line 230, in backward_pass
    cts_out = get_primitive_transpose(eqn.primitive)(
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/jax/interpreters/ad.py", line 599, in call_transpose
    out_flat = primitive.bind(fun, *all_args, **new_params)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/jax/core.py", line 1709, in bind
    return call_bind(self, fun, *args, **params)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/jax/core.py", line 1721, in call_bind
    outs = top_trace.process_call(primitive, fun, tracers, params)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/jax/core.py", line 614, in process_call
    return primitive.impl(f, *tracers, **params)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/jax/_src/dispatch.py", line 145, in _xla_call_impl
    out = compiled_fun(*args)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/jax/_src/dispatch.py", line 444, in _execute_compiled
    out_bufs = compiled.execute(input_bufs)
jax._src.traceback_util.UnfilteredStackTrace: RuntimeError: INTERNAL: Failed to load in-memory CUBIN: CUDA_ERROR_OUT_OF_MEMORY: out of memory

The stack trace below excludes JAX-internal frames.
The preceding is the original exception that occurred, unmodified.

--------------------

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/data/mgrossi/QuantumPathKernel/gaussian-mixtures/gaussian-mixture-jax.py", line 552, in <module>
    main()
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/click/core.py", line 1128, in __call__
    return self.main(*args, **kwargs)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/click/core.py", line 1053, in main
    rv = self.invoke(ctx)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/click/core.py", line 1659, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/click/core.py", line 1395, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/data/mgrossi/anaconda_install/envs/pennylane/lib/python3.9/site-packages/click/core.py", line 754, in invoke
    return __callback(*args, **kwargs)
  File "/data/mgrossi/QuantumPathKernel/gaussian-mixtures/gaussian-mixture-jax.py", line 474, in experiment
    run_qnns(d, snr, n, loss, MAX_LAYERS=layers, MAX_EPOCHS=epochs)
  File "/data/mgrossi/QuantumPathKernel/gaussian-mixtures/gaussian-mixture-jax.py", line 173, in run_qnns
    specs, df, ntk_grams, ntk_gram_indexes, pk_gram = run_qnn(X, Y, loss, layers=layers, epochs=MAX_EPOCHS)
  File "/data/mgrossi/QuantumPathKernel/gaussian-mixtures/gaussian-mixture-jax.py", line 157, in run_qnn
    specs, df = train_qnn(X, Y, qnn, loss, n_params=2*layers, epochs=epochs)
  File "/data/mgrossi/QuantumPathKernel/gaussian-mixtures/gaussian-mixture-jax.py", line 108, in train_qnn
    cost, grad_circuit = jax.value_and_grad(lambda w: calculate_cost(X, Y, qnn, w))(params)
RuntimeError: INTERNAL: Failed to load in-memory CUBIN: CUDA_ERROR_OUT_OF_MEMORY: out of memory
